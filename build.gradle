group 'ElephantNoteFX'
version 'ElephantNoteFX-0.1'

buildscript {
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}
apply plugin: 'java'
apply plugin: 'idea'


repositories {
    mavenLocal()
    mavenCentral()
    jcenter {
        url "http://jcenter.bintray.com/"
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.8.47'

    runtime(['org.controlsfx:controlsfx:8.40.12',
             'org.xerial:sqlite-jdbc:3.19.3',
             'com.j256.ormlite:ormlite-core:5.0',
             'com.j256.ormlite:ormlite-jdbc:5.0',
             'org.apache.commons:commons-lang3:3.4'
    ])

    compile 'com.j256.ormlite:ormlite-core:5.0'
    compile 'com.j256.ormlite:ormlite-jdbc:5.0'

    compile 'org.apache.commons:commons-lang3:3.4'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
    compile 'commons-io:commons-io:2.4'

    compile 'org.controlsfx:controlsfx:8.40.12'
    compile 'com.google.inject:guice:4.1.0'
    compile 'com.gluonhq:ignite-guice:1.0.1'
    compile 'org.projectlombok:lombok:1.16.18'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.7'
    compile 'org.jsoup:jsoup:1.8.3'

    compile 'org.apache.logging.log4j:log4j-api:2.4.1'
    compile 'org.apache.logging.log4j:log4j-core:2.4.1'

//    FontAwesomeFx
    compile 'de.jensd:fontawesomefx-commons:8.15'
    compile 'de.jensd:fontawesomefx-materialicons:2.2.0-5'
    compile 'de.jensd:fontawesomefx-materialdesignfont:1.7.22-4'
    compile 'de.jensd:fontawesomefx-octicons:4.3.0-5'

}
apply plugin: "com.github.johnrengelman.shadow"

//create single jar with all dependencies
shadowJar {
    baseName = 'NoteFX'
    version = null
    manifest {
        attributes 'Main-Class': 'com.kn.elephant.note.Main'
        attributes 'Permissions': 'all-permissions'
    }
}

apply plugin: 'javafx-gradle-plugin'
jfx {
    // minimal requirement for jfxJar-task
    mainClass 'com.kn.elephant.note.Main'

    // minimal requirement for jfxNative-task
    vendor = 'KamilN-NoteFX'
    appName = "Note-FX-Alpha"
    additionalBundlerResources = 'src/main/resources'
    copyAdditionalAppResourcesToJar = true
}
//gradle jfxJar - Create executable JavaFX-jar
//gradle jfxNative - Create native JavaFX-bundle (will run jfxJar first)
//gradle jfxRun - Create the JavaFX-jar and runs it like you would do using java -jar my-project-jfx.jar,
